# Customise failsafe rule
# To do: Add only the exact private ip addresses of the etcd host ip rather than a wide subnet range
apiVersion: crd.projectcalico.org/v1
kind: GlobalNetworkPolicy
metadata:
  name: failsafe-ingress
spec:
  preDNAT: true
  applyOnForward: true
  selector: has(host-endpoint)
  order: 0
  ingress:
  - action: Allow
    protocol: TCP
    source:
      nets: [178.19.216.175/32]
    destination:
      ports: [22]
  - action: Allow
    protocol: ICMP
    source:
      nets: [178.19.216.175/32]
  - action: Allow
    protocol: TCP
    source:
      nets: [178.19.216.175/32]
    destination:
      ports: [179]
---
apiVersion: crd.projectcalico.org/v1
kind: GlobalNetworkPolicy
metadata:
  name: failsafe-egress
spec:
  selector: has(host-endpoint)
  order: 0
  egress:
  - action: Allow
    protocol: TCP
    destination:
      nets: [10.80.0.0/16]
      ports: [2379, 2380]
  - action: Allow
    protocol: TCP
    destination:
      ports: [179]
  - action: Allow
    protocol: UDP
    destination:
      ports: [67, 53]
---
# Allow traffic from IP addresses that are known to be cluster-internal including pods
# pod-cidr is 10.2.0.0/16 and services is 10.3.0.0/16
# Add services because we are disabling fail safe inbound rules
# To do: Add only the exact private ip addresses of the hosts rather than a wide subnet range
apiVersion: crd.projectcalico.org/v1
kind: GlobalNetworkPolicy
metadata:
  name: allow-cluster-internal-ingress
spec:
  order: 10
  preDNAT: true
  applyOnForward: true
  ingress:
    - action: Allow
      source:
        nets: [10.80.0.0/16, 10.2.0.0/16, 10.3.0.0/16]
  selector: has(host-endpoint)
---
# Deny traffic from any other sources
apiVersion: crd.projectcalico.org/v1
kind: GlobalNetworkPolicy
metadata:
  name: drop-other-ingress
spec:
  order: 20
  preDNAT: true
  applyOnForward: true
  ingress:
    - action: Deny
  selector: has(host-endpoint)
---
# Allow egress traffic through nodes' external interface
apiVersion: crd.projectcalico.org/v1
kind: GlobalNetworkPolicy
metadata:
  name: allow-outbound-external
spec:
  order: 10
  egress:
    - action: Allow
  selector: has(host-endpoint)
---
# controller-0 host endpoint
apiVersion: crd.projectcalico.org/v1
kind: HostEndpoint
metadata:
  name: node1-bond0
  labels:
    host-endpoint: ingress
    nodetype: controller
spec:
  interfaceName: bond0
  node: "kosy-controller-0"
---
# worker-0 host endpoint
apiVersion: crd.projectcalico.org/v1
kind: HostEndpoint
metadata:
  name: node2-bond0
  labels:
    host-endpoint: ingress
    nodetype: worker
spec:
  interfaceName: bond0
  node: "kosy-worker-0"
---
# api server access from Kinvolk office IP address
# To do: Add more ip address ranges as needed
apiVersion: crd.projectcalico.org/v1
kind: GlobalNetworkPolicy
metadata:
  name: allow-nodeport
spec:
  preDNAT: true
  applyOnForward: true
  order: 10
  ingress:
    - action: Allow
      protocol: TCP
      source:
        nets: [178.19.216.175/32]
      destination:
        ports: [6443]
  selector: nodetype == 'controller'
